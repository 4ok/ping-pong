{
	"name": "ping-pong",
	"version": "1.0.0",
	"description": "Ping Pong",
	"main": "index.html",
	"author": "4ok",
	"license": "ISC",
	"dependencies": {
		"bootstrap-slider": "^10.2.0",
		"color-hash": "^1.0.3",
		"core-decorators": "^0.20.0",
		"jquery": "^3.3.1",
		"lodash": "^4.17.11",
		"style-loader": "^0.23.0"
	},
	"devDependencies": {
		"@babel/core": "^7.1.0",
		"@babel/plugin-proposal-class-properties": "^7.0.0",
		"@babel/plugin-proposal-decorators": "^7.1.0",
		"@babel/preset-env": "^7.0.0",
		"babel-eslint": "^9.0.0",
		"babel-loader": "^8.0.2",
		"css-loader": "^1.0.0",
		"eslint": "^4.10.0",
		"eslint-config-airbnb": "^17.1.0",
		"eslint-import-resolver-webpack": "^0.10.1",
		"eslint-plugin-import": "^2.14.0",
		"eslint-plugin-json": "^1.2.1",
		"eslint-plugin-react": "^7.11.1",
		"extract-text-webpack-plugin": "^3.0.2",
		"husky": "^1.0.0",
		"install": "^0.12.1",
		"mini-css-extract-plugin": "^0.4.2",
		"npm": "^6.4.1",
		"optimize-css-assets-webpack-plugin": "^5.0.1",
		"postcss-loader": "^3.0.0",
		"stylelint": "^9.5.0",
		"stylelint-config-standard": "^18.2.0",
		"stylelint-order": "^1.0.0",
		"webpack": "^4.19.0",
		"webpack-cli": "^3.1.0",
		"webpack-dev-server": "^3.1.8",
		"webpack-merge": "^4.1.4"
	},
	"scripts": {
		"start": "OUTPUT=public npm run -s _prepare && webpack-dev-server --progress --open --config webpack/configs/development.js",
		"dev": "OUTPUT=public npm run -s _prepare && webpack --progress --config webpack/configs/development.js",
		"build": "OUTPUT=build npm run -s _prepare && webpack --progress --config webpack/configs/production.js",
		"lint:js": "eslint --fix --ext js,json .",
		"lint-modified:js": "npm run _git-diff -s -- *.js *.json | xargs eslint --fix",
		"lint:css": "stylelint --fix '**/*.css'",
		"lint-modified:css": "npm run _git-diff -s -- *.css| xargs stylelint",
		"lint": "npm run lint:js && npm run lint:css",
		"lint-modified": "npm run lint-modified:js && npm run lint-modified:css",
		"_git-diff": "git diff-index --diff-filter=d --name-only HEAD",
		"_install-once": "if [ ! -d 'node_modules' ]; then\nnpm install\nfi",
		"_prepare-output": "rm -rf $OUTPUT && mkdir $OUTPUT && cp index.html $OUTPUT/",
		"_prepare": "npm run _install-once && OUTPUT=$OUTPUT npm run _prepare-output"
	},
	"husky": {
		"hooks": {
			"pre-commit": "npm run lint-modified",
			"pre-push": "npm run lint"
		}
	}
}
